{"version":3,"sources":["Components/Navbar.js","Components/Movie.js","Components/Carousel.js","Components/Pagination.js","Components/MoviesContainer.js","Components/Footer.js","Components/Item.js","Components/Upcoming.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","toggleNavbar","bind","className","role","aria-label","href","src","width","height","alt","onClick","this","aria-expanded","data-target","aria-hidden","id","e","preventDefault","burger","document","querySelector","target","dataset","$target","getElementById","classList","toggle","Component","Movie","poster_path","title","substring","Math","min","length","release_date","vote_average","Carousel","state","movies","params","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","navigation","nextEl","prevEl","breakpoints","1024","768","640","320","axios","response","data","results","map","movie","key","original_title","setState","console","log","getMovies","Pagination","previousPage","actualPage","nextPage","MoviesContainer","a","async","page","Footer","Item","Upcoming","getUpcoming","App","React","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.feee0c32.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                    <a className=\"navbar-item\" href=\"/\">\n                        <img src=\"https://i.ibb.co/g3XJxD3/logo.png\" width=\"122\" height=\"38\" alt=\"\"/>\n                    </a>\n\n                    <a onClick={this.toggleNavbar} href=\"http://\" role=\"button\" className=\"navbar-burger burger\"\n                       aria-label=\"menu\"\n                       aria-expanded=\"false\"\n                       data-target=\"navBarMain\">\n                        <span aria-hidden=\"true\"/>\n                        <span aria-hidden=\"true\"/>\n                        <span aria-hidden=\"true\"/>\n                    </a>\n                </div>\n\n                <div id=\"navBarMain\" className=\"navbar-menu\">\n                    <div className=\"navbar-start\">\n                        <a href=\"/\" className=\"navbar-item\">\n                            Movies\n                        </a>\n\n                        <a href=\"/\" className=\"navbar-item\">\n                            TV Series\n                        </a>\n\n                        <div className=\"navbar-item has-dropdown is-hoverable\">\n                            <a href=\"/\" className=\"navbar-link\">\n                                More\n                            </a>\n\n                            <div className=\"navbar-dropdown\">\n                                <a href=\"/\" className=\"navbar-item\">\n                                    Premium\n                                </a>\n                                <a href=\"/\" className=\"navbar-item\">\n                                    Ads\n                                </a>\n                                <a href=\"/\" className=\"navbar-item\">\n                                    Contact\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"navbar-end\">\n                        <div className=\"navbar-item\">\n                            <div className=\"buttons\">\n                                <a href=\"/\" className=\"button is-primary\">\n                                    <strong>Sign up</strong>\n                                </a>\n                                <a href=\"/\" className=\"button is-light\">\n                                    Log in\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n\n    toggleNavbar(e) {\n        e.preventDefault();\n\n        let burger = document.querySelector('.navbar-burger');\n\n        const target = burger.dataset.target;\n        let $target = document.getElementById(target);\n\n        burger.classList.toggle('is-active');\n        $target.classList.toggle('is-active');\n\n    }\n}\n","import React, {Component} from 'react';\n\nclass Movie extends Component {\n    render() {\n        return (\n            <a className=\"ui card\" href={\"https://image.tmdb.org/t/p/original\" + this.props.poster_path}>\n                <div className=\"image\">\n                    <img src={\"https://image.tmdb.org/t/p/w154\" + this.props.poster_path} alt={this.props.title}/>\n                </div>\n                <div className=\"content\">\n                    <div\n                        className=\"header\">{this.props.title.substring(0, Math.min(this.props.title.length, 10))}</div>\n                    <div className=\"meta\">\n                        <span className=\"date\">{this.props.release_date}</span>\n                    </div>\n                </div>\n                <div className=\"extra content\">\n                    <p>{this.props.vote_average}</p>\n                </div>\n            </a>\n        );\n    }\n}\n\nexport default Movie;","import React, {Component} from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.min.css'\nimport Movie from \"./Movie\";\nimport axios from 'axios';\n\nexport default class Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n            params: {\n                slidesPerView: 6,\n                spaceBetween: 50,\n                loop: true,\n                autoplay: {\n                    delay: 2500,\n                    disableOnInteraction: false\n                },\n                navigation: {\n                    nextEl: '.swiper-button-next',\n                    prevEl: '.swiper-button-prev'\n                },\n                breakpoints: {\n                    1024: {\n                        slidesPerView: 6,\n                        spaceBetween: 30\n                    },\n                    768: {\n                        slidesPerView: 4,\n                        spaceBetween: 30\n                    },\n                    640: {\n                        slidesPerView: 3,\n                        spaceBetween: 20\n                    },\n                    320: {\n                        slidesPerView: 2,\n                        spaceBetween: 10\n                    }\n                }\n            },\n        }\n    }\n\n    async getMovies() {\n        try {\n            const response = await axios(`https://api.themoviedb.org/3/movie/popular?api_key=16c54b5cc29a4cc43c2fe52d3be06784&language=es-es&page=1`);\n            let movies = response.data.results.map(movie => {\n                return (\n                    <div key={movie.id} className=\"swiper-slide\">\n                        <Movie\n                            key={movie.id}\n                            poster_path={movie.poster_path}\n                            title={movie.title}\n                            vote_average={movie.vote_average}\n                            original_title={movie.original_title}\n                            release_date={movie.release_date}\n                        />\n                    </div>\n                );\n            });\n            this.setState({movies});\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        return this.state.movies.length > 0 ? (\n            <div className=\"ui carousel container\">\n                <Swiper {...this.state.params}>\n                    {this.state.movies}\n                </Swiper>\n            </div>\n        ) : false;\n    }\n}\n","import React, {Component} from 'react';\n\nclass Pagination extends Component {\n    render() {\n        return (\n            <div className=\"ui buttons paginator\">\n                <button onClick={this.props.previousPage} className=\"ui labeled icon button\">\n                    <i className=\"left chevron icon\"/>\n                    Previous\n                </button>\n                <button className=\"ui button\">\n                    {this.props.actualPage}\n                </button>\n                <button onClick={this.props.nextPage} className=\"ui right labeled icon button\">\n                    Next\n                    <i className=\"right chevron icon\"/>\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Pagination;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Movie from \"./Movie\";\nimport Pagination from \"./Pagination\";\n\nclass MoviesContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 2,\n            movies: []\n        }\n    }\n\n    async getMovies(page) {\n        try {\n            const response = await axios(`https://api.themoviedb.org/3/movie/popular?api_key=16c54b5cc29a4cc43c2fe52d3be06784&language=es-es&region=US&page=${this.state.page}`);\n            let movies = response.data.results.map(movie => {\n                return (\n                    <Movie\n                        key={movie.id}\n                        poster_path={movie.poster_path}\n                        title={movie.title}\n                        vote_average={movie.vote_average}\n                        original_title={movie.original_title}\n                        release_date={movie.release_date}\n                    />\n                );\n            });\n            this.setState({movies});\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    componentDidMount() {\n        this.getMovies(this.state.page);\n    }\n\n    nextPage = async () => {\n        await this.setState(state => ({\n            page: state.page + 1\n        }));\n        this.getMovies(this.state.page);\n    };\n\n    previousPage = async () => {\n        if (this.state.page <= 2) return null;\n\n        await this.setState(state => ({\n            page: state.page - 1\n        }));\n        this.getMovies(this.state.page);\n    };\n\n    render() {\n        return (\n            <section>\n                <h1>Movies</h1>\n                <div className=\"ui five doubling cards\">\n                    {this.state.movies}\n                </div>\n                <div className=\"ui centered grid\">\n                    <Pagination\n                        nextPage={this.nextPage}\n                        actualPage={this.state.page - 1} //First page is for Carousel\n                        previousPage={this.previousPage}\n                    />\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default MoviesContainer;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <div className=\"ui stackable grid three column center aligned container\">\n                    <div className=\"column\">\n                        <img src=\"https://i.ibb.co/g3XJxD3/logo.png\" width=\"192\" height=\"58\" alt=\"\"/>\n                        <p>Find your favorite movie and TV shows</p>\n                    </div>\n                    <div className=\"column\">\n                        <img\n                            src=\"https://www.themoviedb.org/assets/2/v4/logos/408x161-powered-by-rectangle-blue-10d3d41d2a0af9ebcb85f7fb62ffb6671c15ae8ea9bc82a2c6941f223143409e.png\"\n                            width=\"204\"\n                            height=\"80\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"column\">\n                        <h3>Made by: </h3>\n                        <a href=\"https://github.com/daveflr\" className=\"large ui circular github icon button\">\n                            <i className=\"github icon\"/> Daveflr\n                        </a>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React, {Component} from 'react';\n\nclass Item extends Component {\n    render() {\n        return (\n            <a className=\"item\" href={\"https://image.tmdb.org/t/p/original\" + this.props.poster_path}>\n                <img className=\"ui avatar image\" src={\"https://image.tmdb.org/t/p/w92\" + this.props.poster_path} alt=\"\"/>\n                <div className=\"content\">\n                    <div className=\"header\">{this.props.title}</div>\n                    <div className=\"description\">{this.props.release_date}</div>\n                </div>\n            </a>\n        );\n    }\n}\n\nexport default Item;","import React, {Component} from 'react';\nimport axios from 'axios'\nimport Item from \"./Item\";\n\nclass Upcoming extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 1,\n            movies: [],\n        }\n    }\n\n    componentDidMount() {\n        const getUpcoming = async () => {\n            try {\n                const response = await axios(`https://api.themoviedb.org/3/movie/upcoming?api_key=16c54b5cc29a4cc43c2fe52d3be06784&language=es-es&page=${this.state.page}`);\n                let movies = response.data.results.map(movie => {\n                    return (\n                        <Item\n                            key={movie.id}\n                            poster_path={movie.poster_path}\n                            title={movie.title}\n                            release_date={movie.release_date}\n                        />\n                    );\n                });\n                this.setState({movies});\n            } catch (e) {\n                console.log(e);\n            }\n        };\n        getUpcoming();\n    }\n\n    render() {\n        return (\n            <section>\n                <h1>Upcoming</h1>\n                <div className=\"ui link celled large list\">\n                    {this.state.movies}\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Upcoming;","import React from 'react';\nimport './Styles/App.css'\nimport Navbar from \"./Components/Navbar\";\nimport Carousel from \"./Components/Carousel\";\nimport MoviesContainer from \"./Components/MoviesContainer\";\nimport Footer from \"./Components/Footer\";\nimport Upcoming from \"./Components/Upcoming\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <main>\n                <Navbar/>\n                <Carousel/>\n                <div className=\"ui stackable two column grid container movies-container\">\n                    <div className=\"twelve wide column\">\n                        <MoviesContainer/>\n                    </div>\n                    <div className=\"four wide column\">\n                        <Upcoming/>\n                    </div>\n                </div>\n                <Footer/>\n            </main>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/Navbar.sass'\nimport 'fomantic-ui-css/semantic.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}